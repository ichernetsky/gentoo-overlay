diff --git a/coq/coq.el b/coq/coq.el
index b1853f1..c2c3899 100644
--- a/coq/coq.el
+++ b/coq/coq.el
@@ -289,7 +289,7 @@ used see coq-set-state-number. Initially 1 because Coq initial state has number
   )
 
 (defun proof-last-locked-span ()
-  (save-excursion ;; didn't found a way to avoid buffer switching
+  (save-current-buffer
     (set-buffer proof-script-buffer)
     (span-at (- (proof-unprocessed-begin) 1) 'type)
     )
diff --git a/generic/pg-pbrpm.el b/generic/pg-pbrpm.el
index ef96fc4..a2763ed 100644
--- a/generic/pg-pbrpm.el
+++ b/generic/pg-pbrpm.el
@@ -78,14 +78,14 @@ Matches the region to be returned.")
 (defvar pbrpm-menu-desc nil)
 
 (defun pg-pbrpm-erase-buffer-menu ()
-  (save-excursion
+  (save-current-buffer
     (set-buffer pg-pbrpm-buffer-menu)
     (mapc 'span-delete pg-pbrpm-spans)
     (setq pg-pbrpm-spans nil)
     (erase-buffer)))
 
 (defun pg-pbrpm-menu-change-hook (start end len)
-  (save-excursion
+  (save-current-buffer
     (let ((span (span-at (- start 1) 'editable)))
       (if (not span) (setq span (span-at start 'editable)))
       (if span
@@ -138,7 +138,7 @@ If stores, in the variable pg-pbrpm-goal-description, a list with shape
      start-hyp-text: the position of the first char of the hypothesis formula (no name)
      end-hyp: the position of the last char of the hypothesis
      hyp-name: then name of the hypothesis."
-  (save-excursion
+  (save-current-buffer
     (set-buffer proof-goals-buffer)
     (goto-char 0)
     (let
diff --git a/generic/pg-response.el b/generic/pg-response.el
index 067a1a0..aa434fe 100644
--- a/generic/pg-response.el
+++ b/generic/pg-response.el
@@ -423,7 +423,7 @@ and start at the first error."
 See `pg-next-error-regexp'."
   (if (and pg-next-error-regexp
 	   (buffer-live-p proof-response-buffer))
-      (save-excursion
+      (save-current-buffer
 	(set-buffer proof-response-buffer)
 	(goto-char (point-min))
 	(re-search-forward pg-next-error-regexp nil t))))
diff --git a/generic/pg-user.el b/generic/pg-user.el
index 63845fd..3a7cce1 100644
--- a/generic/pg-user.el
+++ b/generic/pg-user.el
@@ -933,7 +933,7 @@ If NUM is negative, move upwards.  Return new span."
       (let ((win (get-buffer-window proof-script-buffer)))
 	(unless ;; end of locked already displayed
 	    (and win (pos-visible-in-window-p (proof-unprocessed-begin)))
-	  (save-excursion
+	  (save-current-buffer
 	    (set-buffer proof-script-buffer)
 	    (cond
 	     ((proof-locked-region-empty-p)) ;; nothing if empty
diff --git a/generic/pg-xml.el b/generic/pg-xml.el
index 561e118..c6e6056 100644
--- a/generic/pg-xml.el
+++ b/generic/pg-xml.el
@@ -42,7 +42,7 @@
   "Parse string in ARG, same as pg-xml-parse-buffer."
   (let
       ((tempbuffer (get-buffer-create " *xml-parse*")))
-    (save-excursion
+    (save-current-buffer
       (set-buffer tempbuffer)
       (delete-region (point-min) (point-max))
       (insert arg)
diff --git a/generic/proof-script.el b/generic/proof-script.el
index d598624..e538209 100644
--- a/generic/proof-script.el
+++ b/generic/proof-script.el
@@ -738,7 +738,7 @@ to allow other files loaded by proof assistants to be marked read-only."
 ;; General to do the loading, to alleviate file handling there;
 ;; we could cache meta-data resulting from processing files;
 ;; or even, could include parsing inside PG.
-  (save-excursion
+  (save-current-buffer
     (set-buffer buffer)
     (save-excursion ;; prevent point moving if user viewing file
       (if (< (proof-unprocessed-begin) (proof-script-end))
diff --git a/isar/isar.el b/isar/isar.el
index 4931fd7..a18f9dc 100644
--- a/isar/isar.el
+++ b/isar/isar.el
@@ -540,7 +540,7 @@ Checks the width in the `proof-goals-buffer'"
   (let ((ans ""))
     (and (not proof-shell-silent)
 	 (buffer-live-p proof-goals-buffer)
-	 (save-excursion
+	 (save-current-buffer
 	   (set-buffer proof-goals-buffer)
 	   (let ((current-width
 		  ;; Actually, one might want the width of the
diff --git a/lego/lego.el b/lego/lego.el
index 1a7b523..22173b7 100644
--- a/lego/lego.el
+++ b/lego/lego.el
@@ -274,7 +274,7 @@ Given is the first SPAN which needs to be undone."
 Checks the width in the `proof-goals-buffer'"
   (and (buffer-live-p proof-goals-buffer)
        (proof-shell-live-buffer)
-       (save-excursion
+       (save-current-buffer
 	 (set-buffer proof-goals-buffer)
 	 (let ((current-width
 		;; Actually, one might sometimes
diff --git a/lib/texi-docstring-magic.el b/lib/texi-docstring-magic.el
index 19488bb..3ec54a1 100644
--- a/lib/texi-docstring-magic.el
+++ b/lib/texi-docstring-magic.el
@@ -192,7 +192,7 @@ including any whitespace included to delimit matches.")
 
 (defun texi-docstring-magic-untabify (string)
   "Convert tabs in STRING into multiple spaces."
-  (save-excursion
+  (save-current-buffer
     (set-buffer
      (get-buffer-create " texi-docstring-magic-untabify"))
     (insert string)
diff --git a/mmm/mmm-auto.el b/mmm/mmm-auto.el
index 3dbc1d8..5afca01 100644
--- a/mmm/mmm-auto.el
+++ b/mmm/mmm-auto.el
@@ -147,7 +147,7 @@ everything in `mmm-major-mode-hook' will be run."
   (remove-hook 'post-command-hook 'mmm-check-changed-buffers)
   (dolist (buffer mmm-changed-buffers-list)
     (when (buffer-live-p buffer)
-      (save-excursion
+      (save-current-buffer
 	(set-buffer buffer)
 	(mmm-run-major-mode-hook))))
   (setq mmm-changed-buffers-list '()))
diff --git a/mmm/mmm-region.el b/mmm/mmm-region.el
index e2eaf4c..5366c19 100644
--- a/mmm/mmm-region.el
+++ b/mmm/mmm-region.el
@@ -505,7 +505,7 @@ is non-nil, don't quit if the info is already there."
 	  ;; On errors, the temporary buffers don't get deleted, so here
 	  ;; we get rid of any old ones that may be hanging around.
 	  (when (buffer-live-p (get-buffer mmm-temp-buffer-name))
-	    (save-excursion
+	    (save-current-buffer
 	      (set-buffer (get-buffer mmm-temp-buffer-name))
 	      (set-buffer-modified-p nil)
 	      (kill-buffer (current-buffer))))
diff --git a/plastic/plastic.el b/plastic/plastic.el
index 4027d9a..3c2e08e 100644
--- a/plastic/plastic.el
+++ b/plastic/plastic.el
@@ -323,7 +323,7 @@ Given is the first SPAN which needs to be undone."
    ACTUALLY - still need to work with this. (pcc, may99)"
    (and (buffer-live-p proof-goals-buffer)
 	(proof-shell-live-buffer)
-	(save-excursion
+	(save-current-buffer
 	(set-buffer proof-goals-buffer)
 	(let ((current-width
 	       ;; Actually, one might sometimes
